@model Gerenciador_CT.Repositorio.AlunoModalidadesRepositorio

@{
	ViewData["Title"] = "Criar novo aluno";
}
<div class="text-center"></div>
<h1 class="display-4">Adionar novo aluno</h1>


<hr />
<

<form asp-action="Create">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>
	<div class="mb-3">
		<label asp-for="aluno.Nome" class="control-label"></label>
		<input asp-for="aluno.Nome" class="form-control" />
		<span asp-validation-for="aluno.Nome" class="text-danger"></span>
	</div>
	<div class="mb-3">
		<label asp-for="aluno.Idade" class="control-label"></label>
		<input asp-for="aluno.Idade" class="form-control" />
		<span asp-validation-for="aluno.Idade" class="text-danger"></span>
	</div>
	<div class="mb-3">
		<label asp-for="aluno.Cpf" class="control-label"></label>
		<input asp-for="aluno.Cpf"  class="form-control" />
		<span asp-validation-for="aluno.Cpf" class="text-danger"></span>
	</div>
	<div class="mb-3">
		<label class="control-label">Modalidade</label>
		@Html.DropDownListFor(model => model.Modalidade.Id,ViewBag.modalidadesSelectList as SelectList,"--Selecione a modalidade--", new {@class = "form-control"})
	</div>
	<div class="d-grid gap-2">
		<input type="submit" value="Criar" class="btn btn-primary" />
		<a class="btn btn-dark" asp-action="Index">Voltar</a>
	</div>
</form>





@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
